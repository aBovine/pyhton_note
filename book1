# help(list) 查看帮助
# type(variable)
# 数据类型：
# 数字Number: 整数 int、浮点 float、bool、complex
# 字符串String：‘’""
# 列表List:[]
# 元组Tuple:()
# 字典Dictionary:{ } 键(key) : 值(value)
# 集合Set: { } 或者 set()

# int(x [,base])将x转换为一个整数
# float(x)将x转换到一个浮点数
# complex(real [,imag])创建一个复数
# str(x)将对象 x 转换为字符串
# repr(x)将对象 x 转换为表达式字符串
# eval(str)用来计算在字符串中的有效Python表达式,并返回一个对象
# tuple(s)将序列 s 转换为一个元组
# list(s)将序列 s 转换为一个列表
# set(s)转换为可变集合
# dict(d)创建一个字典。d 必须是一个 (key, value)元组序列。
# frozenset(s)转换为不可变集合
# chr(x)将一个整数转换为一个字符
# ord(x)将一个字符转换为它的整数值

# name= input('请输入名字：')
# print('hallo',name)
#  %s字符占位，%d数值,%f保留6位小数，%.nf保留全部小数
print_note= 'i am %s age %d' % ("ke", 18.12345678)
print(print_note)

str='123456'
print(str)                 # 输出字符串
print(str[0:-1])           # 输出第一个到倒数第二个的所有字符
print(str[0])              # 输出字符串第一个字符
print(str[2:5])            # 输出从第三个开始到第五个的字符
print(str[2:])             # 输出从第三个开始后的所有字符
print(str * 2)             # 输出字符串两次
print(str + '你好')        # 连接字符串
testt= (str)[2:5]          # 变量截取字符串
print(testt)
print('这是一行',end='')  # 下面一行也在这一行显示
print('这是另一行')



# 转义字符\，\n表示换行，\t表示制表符，所以\\表示的字符就是\
print('I\'m \"OK\"! learning\nn表示换行.\\\n\\,\t制表符8个空格')
print(r'r开头表示‘’\\里的内容不转义')
print('''三个冒号表示
按编织格式'
自动换行''')

# 布尔值 True、Fals,and全对才True，or有一个对就True

# 变量，python是动态语言变量会根据值自动识别5种标准的数据类型，Numbers（数字）String（字符串）List（列表）Tuple（元组）Dictionary（字典）
a = '123' #解释器先创建了字符串'ABC'再创建变量a，最后把a指向'ABC'：

# 算术运算
print(10/3,'正常除法',10//3,'只取整数',10%3,'只取余数',3**2,'次幂') #除法运算

# 比较运算,==比较是否相等，!=比较是否不相等,>,<,>=,<=

#赋值运算,c += a等效于c=c+a,*=,/=,%=,**=,//=

# 成员运算
# in 如果在指定的序列中找到值返回True，否则返回False。not in没找到就返回True

# 身份运算
# is 是判断两个标识符是不是引用自一个对象，is not



# 集合 list用[],tuple用()
# list是一个可变的有序表 [2]索引显示，.append整体增加,exend逐个扩展，insert插入 ..pop[]指定位置删除，remove指定元素删除
list_n = ['btc','eth',123,456]
print(list_n[1:4]) #按位置索引列表
list_n[2:3] = ['更新1','更新2']  #利用切片来赋值
print(list_n[3])
del list_n[2]
list_n.append ('新增的')
list_n.insert (1,'插入的')
print(list_n)

# set,s = set([1, 2, 3])无序和无重复元素的列表集合 .add增一个值，.remove删除值
sss = set([123,456,5678])
sss.add('abc')
sss.remove(123)
print(sss)

# tuple 不可修改的列表元组，方法和list类似tuple(seq)
tuple_n = ('元组1','元组2','元组1c',4,5)
(aa,bb,cc,dd,ee) = tuple_n  #解压元组
print(bb,cc,dd)

# dict字典，使用{},d = {key1 : value1, key2 : value2 }
# dict_n = {'eth':300,'btc':200}
# print(dict_n['eth'])
# dict_n['eth'] = 100  #修改赋值
# dict_n['token'] = 'abc'  #增加
# dict_n.pop('eth')    # 删除键 'eth'
# print(dict_n)
# del dict_n['value2']    # 删除键 'Name'
# dict_n.clear()       # 清空字典
# del dict_n           # 删除字典
# print(dict_n)


# 条件判断
# age = 20
# if age >= 6:
#     print('teenager')
# elif age >= 18:
#     print('adult')
# else:
#     print('kid')

# 循环 for 循环全部元素一次。while只要条件满足，就不断循环，条件不满足时退出循环
sum2 = 0
sb = 99
while sb>0:
    sum2 = sb+sum2
    sb=sb-1
# print(sum2)

n = 1
while n <= 100:
    if n > 10:   # 当n = 11时，条件满足，执行break语句
        break    # break语句会结束当前循环
    n = n + 1
#print('END')

m=0
while m < 100:
    m = m + 1
    if m % 2 == 0:   # 如果n是偶数，执行continue语句
        continue     # continue语句会直接继续下一轮循环，跳过一次下面的print()语句不会执行
    # print(m)

nb = 10
input_nb = 0
# while input_nb != nb:
#     input_nb = int(input("请输入你猜的数字："))
#     if input_nb < nb :
#         print('太小了，请继续猜：')
#     elif input_nb > nb:
#         print('太大了，请继续猜：')
#     else:
#         print('猜对了')

# 函数
# 位置参数（positional argument）
# 默认参数（default argument）
# 可变参数（variable argument）
# 关键字参数（keyword argument）
# 命名关键字参数（name keyword argument）
# 参数组合
# def 函数名（参数列表）:
    # 函数体

# from abstest import my_abs  #调用函数abstest是py文件，my_abs是定义的函数
print(max(2, 3, 1, -5)) #涵数调用
print(abs(-99))
def area(width , height,*x,**y):    #自定义函数,*号后面是元组,**号后面是字典
     print(width * height)
     print(x)
     print(y)
     return

print (area(3,2,'ha','lala',ha = 123,ka = 456))

# format 把后面的参数或值传入前面,{:.2f}保留小数两位,{:.2%}百分比格式
format_n = "{} {} {:.2f}".format("hello", "world",123.3364)  # 设置指定位置
print(format_n)

